name: windows_agent

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  workflow_dispatch:

env:
    DOTNETVERSION: 6.0.400
    
jobs:
  buildWindows:
    runs-on: windows-2022
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET SDK ${{env.DOTNETVERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '${{env.DOTNETVERSION}}'
          
      - name: Install .NET MAUI
        shell: pwsh
        run: |
          & dotnet nuget locals all --clear
          & dotnet workload install maui --source https://api.nuget.org/v3/index.json
          & dotnet workload install android ios maccatalyst tvos macos maui wasm-tools maui-maccatalyst --source https://api.nuget.org/v3/index.json

      - name: Restore nuget packages
        run: |
          dotnet restore Phoneword.sln
      
      # https://docs.microsoft.com/en-us/dotnet/maui/windows/deployment/overview
      - name: Build Windows MSIX & Android apk
        run: |
          dotnet publish -f net6.0-windows10.0.19041.0 -c Release 
          cd Phoneword
          dotnet publish -f:net6.0-android -c:Release

        # https://docs.microsoft.com/en-us/dotnet/maui/android/deployment/overview
      # - name : Build Android App
      #   shell: bash
      #   run: |
      #     cd Phoneword
      #     dotnet publish -f:net6.0-android -c:Release

      # https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
      # commandline util to encode to base64 on windows
      - name: Create signing pfx file from secrets
        shell: pwsh
        id: secret-file
        env:
          SECRET_DATA1: ${{ secrets.WIN_SIGN_CERT }}
        run: |
          $secretFile = "WinSignCert.pfx"; 
          $encodedBytes = [System.Convert]::FromBase64String($env:SECRET_DATA1); 
          Set-Content $secretFile -Value $encodedBytes -AsByteStream;
          Write-Output "::set-output name=SECRET_FILE::$secretFile";
          Write-Output " ";
          Write-Output "CHECK FILE EXISTS";
          Write-Output " ";
          ls

      # https://docs.microsoft.com/en-us/windows/msix/desktop/azure-dev-ops
      - name: Sign Windows App
        shell: pwsh
        env:
          CERT_PASSWORD: ${{ secrets.WIN_CERT_PASSWORD }}
        run: |
          '"C:\Program Files (x86)\Windows Kits\10\App Certification Kit\SignTool" sign /a /fd SHA256 /f WinSignCert.pfx /p ($env:CERT_PASSWORD) Phoneword\bin\Release\net6.0-windows10.0.19041.0\win10-x64\AppPackages\Phoneword_1.0.0.1_Test\Phoneword_1.0.0.1_x64.msix'

      - uses: actions/upload-artifact@v2
        with:
          name: artifacts-windows
          path: |
            **\*.msix
            Phoneword\bin\Release\net6.0-android\publish\*.apk